{"ast":null,"code":"import _classCallCheck from \"/Users/smy/prenuvo/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/smy/prenuvo/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/smy/prenuvo/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/smy/prenuvo/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/smy/prenuvo/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/smy/prenuvo/react/src/components/Images.jsx\";\nimport React, { Component } from 'react';\nimport '../sass/styles.css';\nimport gridlist from '../prenuvo_db/grid.json';\nimport axios from 'axios';\nimport { timingSafeEqual } from 'crypto'; // `../prenuvo_db/862625ef/${gridlist[key].path}/1361ae6e/bw-gif.gif`\n// gridlist[key].path\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.resize = function () {\n      return _this.setState({\n        screenWidth: window.innerWidth\n      });\n    };\n\n    _this.imageOrganize = function () {\n      var _this$state = _this.state,\n          imgList = _this$state.imgList,\n          imgSizes = _this$state.imgSizes,\n          screenWidth = _this$state.screenWidth;\n      var large = imgSizes.map(function (img) {\n        if (img.width > 385) {\n          return img;\n        }\n      });\n      console.log(large);\n    };\n\n    _this.state = {\n      // error: false,\n      imgList: {},\n      imgSizes: {},\n      screenWidth: 1140\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:3001/list').then(function (response) {\n        imgList;\n\n        _this2.setState({\n          imgList: Object.defineProperties(response.data)\n        });\n      });\n      axios.get('http://localhost:3001/dimensions').then(function (response) {\n        _this2.setState({\n          imgSizes: Object.defineProperties(response.data)\n        });\n      });\n      window.addEventListener('resize', this.resize);\n      this.resize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          imgList = _this$state2.imgList,\n          imgSizes = _this$state2.imgSizes,\n          screenWidth = _this$state2.screenWidth;\n      console.log(screenWidth, imgSizes);\n      var images = Object.keys(imgList).map(function (key, i) {\n        return React.createElement(\"img\", {\n          width: '320px',\n          src: require(\"../prenuvo_db/862625ef/\".concat(imgList[key], \"/bw-gif.gif\")),\n          key: i,\n          alt: imgList[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }); // this.imageOrganize()\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"MRI\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, images));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/smy/prenuvo/react/src/components/Images.jsx"],"names":["React","Component","gridlist","axios","timingSafeEqual","App","props","resize","setState","screenWidth","window","innerWidth","imageOrganize","state","imgList","imgSizes","large","map","img","width","console","log","get","then","response","Object","defineProperties","data","addEventListener","images","keys","key","i","require"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,QAAhC,C,CAEA;AACA;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAwBnBC,MAxBmB,GAwBV;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEC,MAAM,CAACC;AAAtB,OAAd,CAAN;AAAA,KAxBU;;AAAA,UA+CnBC,aA/CmB,GA+CH,YAAM;AAAA,wBACuB,MAAKC,KAD5B;AAAA,UACZC,OADY,eACZA,OADY;AAAA,UACHC,QADG,eACHA,QADG;AAAA,UACON,WADP,eACOA,WADP;AAEpB,UAAMO,KAAK,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAAAC,GAAG,EAAI;AAChC,YAAGA,GAAG,CAACC,KAAJ,GAAY,GAAf,EAAmB;AACjB,iBAAOD,GAAP;AACD;AACF,OAJa,CAAd;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,KAvDkB;;AAEjB,UAAKH,KAAL,GAAa;AACX;AACAC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXN,MAAAA,WAAW,EAAE;AAJF,KAAb;AAFiB;AAQlB;;;;yCAEoB;AAAA;;AACnBN,MAAAA,KAAK,CAACmB,GAAN,CAAU,4BAAV,EACCC,IADD,CACM,UAACC,QAAD,EAAc;AAClBV,QAAAA,OAAO;;AACP,QAAA,MAAI,CAACN,QAAL,CAAc;AAAEM,UAAAA,OAAO,EAAEW,MAAM,CAACC,gBAAP,CAAwBF,QAAQ,CAACG,IAAjC;AAAX,SAAd;AACD,OAJD;AAKAxB,MAAAA,KAAK,CAACmB,GAAN,CAAU,kCAAV,EACCC,IADD,CACM,UAACC,QAAD,EAAc;AAClB,QAAA,MAAI,CAAChB,QAAL,CAAc;AAAEO,UAAAA,QAAQ,EAAEU,MAAM,CAACC,gBAAP,CAAwBF,QAAQ,CAACG,IAAjC;AAAZ,SAAd;AACD,OAHD;AAIAjB,MAAAA,MAAM,CAACkB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKrB,MAAvC;AACA,WAAKA,MAAL;AACD;;;6BAmCQ;AAAA,yBACoC,KAAKM,KADzC;AAAA,UACCC,OADD,gBACCA,OADD;AAAA,UACUC,QADV,gBACUA,QADV;AAAA,UACoBN,WADpB,gBACoBA,WADpB;AAEVW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ,EAAyBM,QAAzB;AACG,UAAMc,MAAM,GAAGJ,MAAM,CAACK,IAAP,CAAYhB,OAAZ,EAAqBG,GAArB,CACb,UAACc,GAAD,EAAMC,CAAN;AAAA,eAAY;AAAK,UAAA,KAAK,EAAE,OAAZ;AAAqB,UAAA,GAAG,EAAEC,OAAO,kCAA2BnB,OAAO,CAACiB,GAAD,CAAlC,iBAAjC;AAAwF,UAAA,GAAG,EAAEC,CAA7F;AAAgG,UAAA,GAAG,EAAElB,OAAO,CAACiB,GAAD,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AAAA,OADa,CAAf,CAHO,CAMX;;AACI,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,MADH,CAFF,CADF;AASD;;;;EA1E8B5B,S;;SAAZI,G","sourcesContent":["import React, { Component } from 'react';\nimport '../sass/styles.css';\nimport gridlist from '../prenuvo_db/grid.json'\nimport axios from 'axios';\nimport { timingSafeEqual } from 'crypto';\n\n// `../prenuvo_db/862625ef/${gridlist[key].path}/1361ae6e/bw-gif.gif`\n// gridlist[key].path\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // error: false,\n      imgList: {},\n      imgSizes: {},\n      screenWidth: 1140,\n    };\n  }\n\n  componentWillMount() {\n    axios.get('http://localhost:3001/list')\n    .then((response) => {\n      imgList\n      this.setState({ imgList: Object.defineProperties(response.data)})\n    })\n    axios.get('http://localhost:3001/dimensions')\n    .then((response) => {\n      this.setState({ imgSizes: Object.defineProperties(response.data)})\n    })\n    window.addEventListener('resize', this.resize)\n    this.resize()\n  }\n\n  resize = () => this.setState({ screenWidth: window.innerWidth})\n\n  // onImgLoad = ({ target: img }) => {\n  //   const { imgSizes } = this.state\n  //   const obj = {}\n  //   obj[img.alt] = {\n  //       width: img.width,\n  //       height: img.height,\n  //     }\n  //   imgSizes.push(obj)\n  //   this.setState({\n  //     imgSizes\n  //   });\n  //   // console.log('img', obj, imgSizes, img.alt)\n  // }\n\n  // onImgError = e => {\n  //   e.target.src = '/path/no-picture.jpg'\n  //   this.setState({\n  //     error: true,\n  //   })\n  // }\n\n  imageOrganize = () => {\n    const { imgList, imgSizes, screenWidth } = this.state\n    const large = imgSizes.map(img => {\n      if(img.width > 385){\n        return img\n      }\n    })\n    console.log(large)\n  }\n\n  render() {\n    const { imgList, imgSizes, screenWidth } = this.state\n console.log(screenWidth, imgSizes )\n    const images = Object.keys(imgList).map(\n      (key, i) => <img width={'320px'} src={require(`../prenuvo_db/862625ef/${imgList[key]}/bw-gif.gif`)} key={i} alt={imgList[key]} />\n    )\n// this.imageOrganize()\n    return (\n      <div>\n       <h1>MRI</h1> \n        <div>\n          {images}\n        </div>\n\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}